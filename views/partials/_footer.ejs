        <footer class="HI-footer bg-light">
            <p class="h6 text-center">Terms / Conditions & Privacy Policy Â©Copyright <span class="hi-text-red">HI</span><span class="hi-text-blue-primary">Card</span></p>
        </footer>
        <!--scripts js-->
        <script src="./js/jquery-1.11.3.js"></script>
        <script src="./js/fontawesome/js/all.min.js"></script>
        <script src="./js/bootstrap.min.js"></script>
        <script src="./js/toastr.min.js"></script>
        <script src="./js/select2.min.js"></script>
        <script src="./js/jquery.cookies.js"></script>
        <!-- Latest compiled and minified JavaScript -->
        <script type="text/javascript" src="./js/jquery-ui.js"></script>
        <script type="text/javascript" src="./js/app.js"></script>
        <script type="text/javascript" src="./js/listjs.js"></script>
        <% if (locals.flash && locals.flash.success) { %> 
            <script>
                alert("llllllllhj")
                toastr.options = {
                    "closeButton": false,
                    "debug": false,
                    "newestOnTop": false,
                    "progressBar": false,
                    "positionClass": "toast-top-full-width",
                    "preventDuplicates": false,
                    "onclick": null,
                    "showDuration": "300",
                    "hideDuration": 1000,
                    "timeOut": "5000",
                    "extendedTimeOut": "1000",
                    "showEasing": "swing",
                    "hideEasing": "linear",
                    "showMethod": "fadeIn",
                    "hideMethod": "fadeOut"
                }
                
                toastr['success']("<%= flash.success %>")
            </script>
        <% } %> 
        <script>
            function parseJwt (token) {
                var base64Url = token.split('.')[1];
                var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
                var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {
                    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
                }).join(''));
            
                return JSON.parse(jsonPayload);
            }
            let email = parseJwt($.cookie("ACCESS_TOKEN")).email
            $('.name-user').empty().text(email)
            $("div.main").attr({'style':'margin-top : 80px !important;'})
            class Skeleton extends HTMLElement{constructor(){super();this.root=this.attachShadow({mode:"open"})}size(t,e){if(t){if(t.match(/^[0-9]+$/))t+="px";return t}else if(e)return"100%";return"auto"}connectedCallback(){const t="\\00a0";const e=this.getAttribute("placeholder")||t;const n=this.getAttribute("rounded");const i=this.size(this.getAttribute("width"),e===t);const s=this.size(this.getAttribute("height"));const o=parseInt(this.getAttribute("lines")||0,10);let r="<span></span>";if(o>1)for(let t=1;t<o;t++)r+="<span></span>";this.root.innerHTML=`\r\n    <style>\r\n      :host {\r\n        display: block;\r\n      }\r\n      div {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: flex-start;\r\n      }\r\n      span {\r\n        position: relative;\r\n        width: ${i};\r\n        height: ${s};\r\n        display: block;\r\n        border-radius: ${null!==n?"50%":"4px"};\r\n        background-color: var(--skeleton, #0000001C);\r\n        overflow: hidden;\r\n        transform: ${e!==t||o>0?"scale(1, 0.6)":"none"};\r\n      }\r\n      ${o?`\r\n      span:last-child {\r\n        width: ${20+60*Math.random()+"%"}\r\n      }`:""}\r\n      span::before {\r\n        content: '${e}';\r\n        opacity: 0;\r\n      }\r\n      span::after {\r\n        content:'';\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0; \r\n        right: 0;\r\n        bottom: 0;\r\n        animation: waves 1.6s linear .5s infinite;\r\n        transform: translateX(-100%);\r\n        background: linear-gradient(90deg, transparent, var(--skeleton-wave, rgba(0,0,0,0.06)), transparent);\r\n      }\r\n      @keyframes waves {\r\n        0% {\r\n          transform: translateX(-100%);\r\n        }\r\n        60% {\r\n          transform: translateX(100%);\r\n        }\r\n        100% {\r\n          transform: translateX(100%);\r\n        }\r\n      }\r\n    </style>\r\n    <div>${r}</div>\r\n    `}};

             customElements.define('skeleton-box', Skeleton)
            
        </script>
        
        
        
    </body>
</html>